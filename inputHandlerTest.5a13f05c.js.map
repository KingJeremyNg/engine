{"version":3,"sources":["src/lib/inputHandler.js","tests/inputHandlerTest/inputHandlerTest.js"],"names":["InputHandler","elem","events","event","input","keys","code","mouse","button","x","clientX","y","clientY","dynamicEvents","Object","forEach","eventName","dynamicEvent","fn","call","bind","addEventListener","removeEventListener","keyDown","keyUp","mouseDown","mouseUp","mouseMove","concat","length","map","assign","addNotification","text","notifications","document","querySelector","childNodes","innerHTML","child","createElement","classList","style","margin","appendChild","setTimeout","removeChild","exampleInput","startHandler","stopHandler"],"mappings":"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","file":"inputHandlerTest.5a13f05c.js","sourceRoot":"..","sourcesContent":["export default class InputHandler {\n    constructor(elem, events) {\n        this.elem = elem;\n        this.input = {\n            keys: [],\n            mouse: [],\n            x: 0,\n            y: 0\n        }\n\n        this.events = {\n            \"keydown\": [this.keyDown],\n            \"keyup\": [this.keyUp],\n            \"mousedown\": [this.mouseDown],\n            \"mouseup\": [this.mouseUp],\n            \"mousemove\": [this.mouseMove]\n        };\n\n        Object.keys(events).forEach(function (eventName) {\n            if (this.events[eventName]) {\n                this.events[eventName] = this.events[eventName].concat(events[eventName].length ? events[eventName].map(fn => fn.bind(this)) : [events[eventName]]);\n            } else {\n                this.events[eventName] = events[eventName].length ? events[eventName].map(fn => fn.bind(this)) : [events[eventName]];\n            }\n        }.bind(this));\n\n        this.dynamicEvents = {};\n    }\n\n    keyDown = (event) => {\n        this.input.keys[event.code] = true;\n    }\n\n    keyUp = (event) => {\n        this.input.keys[event.code] = false;\n    }\n\n    mouseDown = (event) => {\n        this.input.mouse[event.button] = true;\n\n    }\n\n    mouseUp = (event) => {\n        this.input.mouse[event.button] = false;\n    }\n\n    mouseMove = (event) => {\n        this.input.x = event.clientX;\n        this.input.y = event.clientY;\n    }\n\n    startHandler = () => {\n        this.dynamicEvents = {}\n        Object.keys(this.events).forEach(function (eventName) {\n            let dynamicEvent = function (event) {\n                this.events[eventName].forEach(function (fn) {\n                    fn.call(this, event);\n                }.bind(this))\n            }.bind(this)\n\n            this.dynamicEvents[eventName] = dynamicEvent;\n            this.elem.addEventListener(eventName, dynamicEvent);\n        }.bind(this));\n    }\n\n    stopHandler = () => {\n        Object.keys(this.events).forEach((eventName) => {\n            this.elem.removeEventListener(eventName, this.dynamicEvents[eventName]);\n        });\n        this.dynamicEvents = {}\n    }\n\n    setEvents(events) {\n        Object.assign(this.events, events);\n    }\n\n    keys() {\n        return this.input.keys;\n    }\n\n    mouse() {\n        return this.input.mouse;\n    }\n\n    mouseX() {\n        return this.input.x;\n    }\n\n    mouseY() {\n        return this.input.y;\n    }\n}\n","import InputHandler from '../../src/lib/inputHandler';\n\nfunction addNotification(text) {\n      let notifications = document.querySelector('.notifications');\n      if(notifications.childNodes.length > 3) {\n            notifications.innerHTML = \"\";\n      }\n      let child = document.createElement('div');\n      child.innerHTML = text;\n      child.classList = \"notification is-info\";\n      Object.assign(child.style, {margin: 0})\n      notifications.appendChild(child);\n\n      setTimeout(() => {\n            notifications.removeChild(child);\n      }, 500)\n}\n\n//Input with custom callbacks\nlet events = {\n      \"keydown\": [() => {addNotification(\"Key Down!\")}],\n      \"keyup\": () => {addNotification(\"Key up!\")},\n      \"mousedown\": [() => {addNotification(\"Mouse button down!\")}],\n      \"mouseup\": () => {addNotification(\"Mouse button up!\")},\n      \"mousemove\": () => {addNotification(\"Mouse moving!\")}\n}\n\nlet exampleInput = new InputHandler(document.querySelector('body'), events);\n\nexport function startHandler() {\n      exampleInput.startHandler();\n}\n\nexport function stopHandler() {\n      exampleInput.stopHandler();\n}\n\n"]}