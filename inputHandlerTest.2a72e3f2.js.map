{"version":3,"sources":["inputHandlerTest/inputHandlerTest.js"],"names":["addNotification","text","notifications","document","querySelector","childNodes","length","innerHTML","child","createElement","classList","Object","assign","style","margin","appendChild","setTimeout","removeChild","events","exampleInput","InputHandler","startHandler","stopHandler"],"mappings":";;;;;;;;AAAA;;;;AAEA,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACzB,MAAIC,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAApB;;AACA,MAAGF,aAAa,CAACG,UAAd,CAAyBC,MAAzB,GAAkC,CAArC,EAAwC;AAClCJ,IAAAA,aAAa,CAACK,SAAd,GAA0B,EAA1B;AACL;;AACD,MAAIC,KAAK,GAAGL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAZ;AACAD,EAAAA,KAAK,CAACD,SAAN,GAAkBN,IAAlB;AACAO,EAAAA,KAAK,CAACE,SAAN,GAAkB,sBAAlB;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACK,KAApB,EAA2B;AAACC,IAAAA,MAAM,EAAE;AAAT,GAA3B;AACAZ,EAAAA,aAAa,CAACa,WAAd,CAA0BP,KAA1B;AAEAQ,EAAAA,UAAU,CAAC,YAAM;AACXd,IAAAA,aAAa,CAACe,WAAd,CAA0BT,KAA1B;AACL,GAFS,EAEP,GAFO,CAAV;AAGL,EAED;;;AACA,IAAIU,MAAM,GAAG;AACP,aAAW,CAAC,YAAM;AAAClB,IAAAA,eAAe,CAAC,WAAD,CAAf;AAA6B,GAArC,CADJ;AAEP,WAAS,iBAAM;AAACA,IAAAA,eAAe,CAAC,SAAD,CAAf;AAA2B,GAFpC;AAGP,eAAa,CAAC,YAAM;AAACA,IAAAA,eAAe,CAAC,oBAAD,CAAf;AAAsC,GAA9C,CAHN;AAIP,aAAW,mBAAM;AAACA,IAAAA,eAAe,CAAC,kBAAD,CAAf;AAAoC,GAJ/C;AAKP,eAAa,qBAAM;AAACA,IAAAA,eAAe,CAAC,eAAD,CAAf;AAAiC;AAL9C,CAAb;AAQA,IAAImB,YAAY,GAAG,IAAIC,qBAAJ,CAAiBjB,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAjB,EAAiDc,MAAjD,CAAnB;;AAEO,SAASG,YAAT,GAAwB;AACzBF,EAAAA,YAAY,CAACE,YAAb;AACL;;AAEM,SAASC,WAAT,GAAuB;AACxBH,EAAAA,YAAY,CAACG,WAAb;AACL","file":"inputHandlerTest.2a72e3f2.js","sourceRoot":"../tests","sourcesContent":["import InputHandler from '../src/lib/inputHandler';\n\nfunction addNotification(text) {\n      let notifications = document.querySelector('.notifications');\n      if(notifications.childNodes.length > 3) {\n            notifications.innerHTML = \"\";\n      }\n      let child = document.createElement('div');\n      child.innerHTML = text;\n      child.classList = \"notification is-info\";\n      Object.assign(child.style, {margin: 0})\n      notifications.appendChild(child);\n\n      setTimeout(() => {\n            notifications.removeChild(child);\n      }, 500)\n}\n\n//Input with custom callbacks\nlet events = {\n      \"keydown\": [() => {addNotification(\"Key Down!\")}],\n      \"keyup\": () => {addNotification(\"Key up!\")},\n      \"mousedown\": [() => {addNotification(\"Mouse button down!\")}],\n      \"mouseup\": () => {addNotification(\"Mouse button up!\")},\n      \"mousemove\": () => {addNotification(\"Mouse moving!\")}\n}\n\nlet exampleInput = new InputHandler(document.querySelector('body'), events);\n\nexport function startHandler() {\n      exampleInput.startHandler();\n}\n\nexport function stopHandler() {\n      exampleInput.stopHandler();\n}\n\n"]}